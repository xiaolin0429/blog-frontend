// 文本省略
@mixin text-ellipsis($line: 1) {
  @if $line == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    overflow: hidden;
  }
}

// flex布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// 滚动条样式
@mixin scrollbar {
  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 3px;
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
    
    &:hover {
      background: rgba(0, 0, 0, 0.2);
    }
  }
}

// 响应式
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: 479px) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: 480px) and (max-width: 767px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: 768px) and (max-width: 991px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: 992px) and (max-width: 1199px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: 1200px) and (max-width: 1599px) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (min-width: 1600px) {
      @content;
    }
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 阴影
@mixin box-shadow($level: base) {
  @if $level == light {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  } @else if $level == base {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  } @else if $level == dark {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
}

// 过渡
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property 0.3s ease-in-out, comma);
  }
  transition: $transitions;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == '2xl' {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
} 